;; -*-lisp-*-
(in-package :stumpwm)

;; mondd meg az ASDF-nek, hogy hol keresse a contrib modulokat
(pushnew #P"~/.stumpwm.d/contrib/" asdf:*central-registry* :test #'equal)
(set-module-dir (pathname-as-directory (concat (getenv "HOME") "/.stumpwm.d/contrib")))
(add-to-load-path "/usr/share/common-lisp/source/stumpwm-contrib")



(set-font "-xos4-terminus-bold-r-normal-*-16-*-*-*-*-*-*-*")

;; Prefix key átállítása (ha nem akarod a Ctrl+t-t)
(set-prefix-key (kbd "F13"))  ;

;;; billentyűk
(define-key *top-map* (kbd "s-Return") "exec alacritty")
(define-key *top-map* (kbd "s-d") "exec rofi -show run")
(define-key *top-map* (kbd "s-w") "exec firefox")
(define-key *top-map* (kbd "s-p") "exec discord")
(define-key *top-map* (kbd "s-P") "exec thunar")
(define-key *top-map* (kbd "s-E") "exec subl")

;; Konfig újratöltése
(define-key *top-map* (kbd "s-r") "exec alacritty -e vifm")

;; Restart (újraindítás)
(define-key *top-map* (kbd "s-R") "restart-hard")

;; Ablak bezárása
(define-key *top-map* (kbd "s-q") "delete")
(define-key *top-map* (kbd "s-Q") "remove")
(define-key *root-map* (kbd "f") "fullscreen")

;; Ablakok közti váltás
(define-key *top-map* (kbd "s-Tab") "next")
(define-key *top-map* (kbd "M-Tab") "pull-hidden-next")

;; Ablak áthelyezése másik keretbe (tilingnél)
(define-key *top-map* (kbd "s-S-Right") "move-window right")
(define-key *top-map* (kbd "s-S-Left")  "move-window left")
(define-key *top-map* (kbd "s-S-Up")    "move-window up")
(define-key *top-map* (kbd "s-S-Down")  "move-window down")

;;; --- Osztás (split) ---

;; Commands
(defcommand fullscreen-and-raise () ()
"Fullscreen window and make sure it's on top of all other windows"
(with-on-top (stumpwm:current-window) (fullscreen)))


(defcommand hsplit-and-focus () ()
"create a new frame on the right and focus it."
(hsplit)
(move-focus :right))


(defcommand vsplit-and-focus () ()
"create a new frame below and focus it."
(vsplit)
(move-focus :down))


(defcommand remove-and-balance () ()
"Remove current split and balance the rest"
(remove-split)
(balance-frames))


(define-key *top-map* (kbd "s-v") "hsplit-and-focus")
(define-key *top-map* (kbd "s-h") "vsplit-and-focus")

;; Split bezárása
(define-key *top-map* (kbd "s-o") "remove-and-balance")
(define-key *top-map* (kbd "s-b") "balance-frames")

;;; workspace-ek (groupok)
(gnew "web")
(gnew "chat")
(gnew "dev")
(gnew "vid")
(gnew "game")
(gselect "web")

;; A group-ok nevei
(defparameter *my-groups* '("web" "chat" "dev" "vid" "game"))

;; Super + szám → váltás a group-ra
(loop for i from 1 to (length *my-groups*)
      for name = (nth (1- i) *my-groups*) do
      (define-key *top-map*
        (kbd (format nil "s-~a" i))
        (format nil "gselect ~a" name)))

(define-frame-preference "web"
    (0 T T :class "Vivaldi-stable")
    (0 T T :class "firefox"))


(define-frame-preference "chat"
    (0 T T :class "qutebrowser")
    (0 T T :class "discord"))

(define-frame-preference "dev"
    (0 T T :class "subl3"))   

(define-frame-preference "vid"
    (0 T T :class "mpv"))

(define-frame-preference "game"
    (0 T T :class "steam"))    

(define-key *top-map* (kbd "C-s-1") "gmove web")
(define-key *top-map* (kbd "C-s-2") "gmove chat")
(define-key *top-map* (kbd "C-s-3") "gmove dev")
(define-key *top-map* (kbd "C-s-4") "gmove vid")
(define-key *top-map* (kbd "C-s-5") "gmove game")

(setf
 *mode-line-background-color* "#282a36";
 *mode-line-foreground-color* "#bbbbbb"
 *mode-line-border-color* "#282a36"
 *mode-line-border-width* 2
 *mode-line-pad-x* 6
 *mode-line-pad-y* 6
 *mode-line-timeout* 1
 *group-format* " %t "
 *time-modeline-string* "%H:%M"
 *window-format* "<%n:%25t>"
 *screen-mode-line-format* (list "%g  %v ^> " '(:eval (string-trim '(#\Newline) (run-shell-command "sensors | awk  '/Core 0:/ {print $3}' | sed 's/+//g'" t))) " | " '(:eval  (string-trim '(#\Newline) (run-shell-command "sensors | awk  '/edge:/ {print $2}'" t))) " | " '(:eval (string-trim '(#\Newline) (run-shell-command "date" t)))))

(enable-mode-line (current-screen) (current-head) t)



;;; Theme
(setf *colors*
      '("#000000"   ;black
        "#BF6262"   ;red
        "#a1bf78"   ;green
        "#dbb774"   ;yellow
        "#6272a4"   ;blue
        "#ff99ff"   ;magenta
        "#53cdbd"   ;cyan
        "#ffffff")) ;white

(update-color-map (current-screen))


;;; Basic Settings

(setf *message-window-gravity* :center
      *input-window-gravity* :center
      *message-window-padding* 8
      *message-window-y-padding* 6
      *window-border-style* :thin
      *message-window-padding* 3
      *maxsize-border-width* 2
      *normal-border-width* 2
      *transient-border-width* 2
      *mouse-focus-policy* :click
      stumpwm::*float-window-border* 1
      stumpwm::*float-window-title-height* 1)

;;; Gaps
(load-module "swm-gaps")
(setf swm-gaps:*inner-gaps-size* 13
      swm-gaps:*outer-gaps-size* 7
      swm-gaps:*head-gaps-size* 0)
(when *initializing*
  (swm-gaps:toggle-gaps))
(define-key *top-map* (kbd "s-g") "toggle-gaps")


;;;  end session module
(load-module "end-session")
(define-key *root-map* (kbd "Escape") "end-session")

;; Add the system tray module
